# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import grpc_server_pb2 as grpc__server__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in grpc_server_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GrpcServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateShape = channel.unary_unary(
                '/GrpcServer/CreateShape',
                request_serializer=grpc__server__pb2.ShapeType.SerializeToString,
                response_deserializer=grpc__server__pb2.CreateShapeResponse.FromString,
                _registered_method=True)
        self.GetShape = channel.unary_unary(
                '/GrpcServer/GetShape',
                request_serializer=grpc__server__pb2.ShapeId.SerializeToString,
                response_deserializer=grpc__server__pb2.GetShapeResponse.FromString,
                _registered_method=True)
        self.GetPerimetersGreaterThan = channel.unary_stream(
                '/GrpcServer/GetPerimetersGreaterThan',
                request_serializer=grpc__server__pb2.MinPerimeter.SerializeToString,
                response_deserializer=grpc__server__pb2.GetPerimetersGreaterThanResponse.FromString,
                _registered_method=True)
        self.GetTotalArea = channel.stream_unary(
                '/GrpcServer/GetTotalArea',
                request_serializer=grpc__server__pb2.ShapeId.SerializeToString,
                response_deserializer=grpc__server__pb2.GetTotalAreaResponse.FromString,
                _registered_method=True)
        self.GetAreas = channel.stream_stream(
                '/GrpcServer/GetAreas',
                request_serializer=grpc__server__pb2.ShapeId.SerializeToString,
                response_deserializer=grpc__server__pb2.GetAreasResponse.FromString,
                _registered_method=True)


class GrpcServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateShape(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShape(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPerimetersGreaterThan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalArea(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAreas(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GrpcServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateShape': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShape,
                    request_deserializer=grpc__server__pb2.ShapeType.FromString,
                    response_serializer=grpc__server__pb2.CreateShapeResponse.SerializeToString,
            ),
            'GetShape': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShape,
                    request_deserializer=grpc__server__pb2.ShapeId.FromString,
                    response_serializer=grpc__server__pb2.GetShapeResponse.SerializeToString,
            ),
            'GetPerimetersGreaterThan': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPerimetersGreaterThan,
                    request_deserializer=grpc__server__pb2.MinPerimeter.FromString,
                    response_serializer=grpc__server__pb2.GetPerimetersGreaterThanResponse.SerializeToString,
            ),
            'GetTotalArea': grpc.stream_unary_rpc_method_handler(
                    servicer.GetTotalArea,
                    request_deserializer=grpc__server__pb2.ShapeId.FromString,
                    response_serializer=grpc__server__pb2.GetTotalAreaResponse.SerializeToString,
            ),
            'GetAreas': grpc.stream_stream_rpc_method_handler(
                    servicer.GetAreas,
                    request_deserializer=grpc__server__pb2.ShapeId.FromString,
                    response_serializer=grpc__server__pb2.GetAreasResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GrpcServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('GrpcServer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GrpcServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateShape(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/GrpcServer/CreateShape',
            grpc__server__pb2.ShapeType.SerializeToString,
            grpc__server__pb2.CreateShapeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetShape(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/GrpcServer/GetShape',
            grpc__server__pb2.ShapeId.SerializeToString,
            grpc__server__pb2.GetShapeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPerimetersGreaterThan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/GrpcServer/GetPerimetersGreaterThan',
            grpc__server__pb2.MinPerimeter.SerializeToString,
            grpc__server__pb2.GetPerimetersGreaterThanResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTotalArea(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/GrpcServer/GetTotalArea',
            grpc__server__pb2.ShapeId.SerializeToString,
            grpc__server__pb2.GetTotalAreaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAreas(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/GrpcServer/GetAreas',
            grpc__server__pb2.ShapeId.SerializeToString,
            grpc__server__pb2.GetAreasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
